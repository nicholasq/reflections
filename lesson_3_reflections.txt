
When would you want to use a remote repository rather than keeping all your work
local?

It is a good idea to use a remote repository if you want that extra safety in
case you lose your local machine or lose the local data.    

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

There may be some things that you want to change before pulling from a remote
repository.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

A fork is like a local clone done only on Github. Forks are a concept that exist
on Github. A clone is an exact copy of a repository whether local or remote. A
branch is a history of commits and can split off from the master branch from
another commit. This can create multiple 'paths' or branches.

What is the benefit of having a copy of the last known state of the remote
stored locally?

It allows me to see any changes my local master branch has against my local
remote branch.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

You could use a server to host your git repository if you wanted to collaborate
privately and under your own terms. It would be easier to use GitHub because everything is already setup and working stable for your needs. The only disadvantage is having to pay for a private repository.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

Making changes in a separate branch allows you to test features that mean need 
be thoroughly reviewed before being added to the master branch. This allows you
to fix bugs and test if they worked and also to add cool new experimental features.
